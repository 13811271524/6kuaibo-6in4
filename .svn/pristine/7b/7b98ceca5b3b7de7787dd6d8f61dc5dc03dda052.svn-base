package de.blinkt.openvpn.util;

import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.AsyncTask;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.impl.client.DefaultHttpClient;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

/**
 * Created by Wing on 13-10-6.
 */
public class UpdateAgent {
    private static boolean sIsChecked = false;
    private static Context sContext = null;
    public static void checkUpdate(Context c)
    {
        try {
            sContext = c;
            int versionCode = c.getPackageManager().getPackageInfo(c.getPackageName(), 0).versionCode;
            new CheckTask().execute(versionCode);
        } catch (PackageManager.NameNotFoundException e) {
            e.printStackTrace();
        }
    }

    static class CheckTask extends AsyncTask<Integer,Void,String>
    {

        @Override
        protected String doInBackground(Integer... integers) {
            int code = integers[0];
            if(sIsChecked)return null;
          try {
        	  URL  url = new URL("http://update.6kuaibo.com/mobile/update/vpn.xml");
        	  HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.connect();
			InputStream is = conn.getInputStream();
			String currentVersion = getUserByXML(is);
			if(currentVersion.equals(String.valueOf(code)))
				return null;
			else
				return "需要更新";
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
          
            return null;
        }
        
        public String getUserByXML(InputStream is) throws Exception{
        		DocumentBuilderFactory dbfactory = DocumentBuilderFactory.newInstance();
        		DocumentBuilder db = dbfactory.newDocumentBuilder();
        		Document document = db.parse(is);//上面是使用DOM解析XML的准备工作，固定的套路

        		Element root = document.getDocumentElement();//获取根文档
        		// 如果返回的xml中login标签为1的话，则开始构造User，否则User始终为null
        		String currentVersion = root.getElementsByTagName("openvpnVersion")
        					.item(0).getFirstChild().getNodeValue().toString();
        		return currentVersion;
        	}

        @Override
        protected void onPostExecute(final String aString) {
            super.onPostExecute(aString);
            if(aString!=null) {
                AlertDialog.Builder adb = new AlertDialog.Builder(sContext);
                adb.setTitle("应用更新").setMessage(aString)
                        .setPositiveButton("确定",new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialogInterface, int i) {
                                Uri uri = Uri.parse("http://update.6kuaibo.com/update/openvpn-install.exe");
                                Intent intent = new Intent(Intent.ACTION_VIEW,uri);
                                sContext.startActivity(intent);
                            }
                        })
                        .setNegativeButton("取消",null)
                        .show();
            }
        }
    }
}
